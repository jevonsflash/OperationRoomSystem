<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">


    <system:Double x:Key="NormalFontSize">22</system:Double>

    <!--新增-->
    <Style x:Key="CommonButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Height"
                Value="64"></Setter>
        <Setter Property="Control.Foreground"
                Value="{StaticResource ApplicationForegroundBrush}" />
        <Setter Property="Control.Background"
                Value="{StaticResource ApplicationContrastBackgroundBrush}" />
        <Setter Property="Control.FontSize"
                Value="{StaticResource NormalFontSize}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border BorderBrush="{TemplateBinding Background}"
                            BorderThickness="2"
                            CornerRadius="5">
                        <Grid Name="BtnName"
                              Background="{TemplateBinding Control.Background}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Grid>

                    </Border >
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">

                            <Setter Property="Control.Background"
                                    Value="{StaticResource ApplicationSelectedBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed"
                                 Value="True">
                            <Setter Property="UIElement.Opacity"
                                    Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Height"
                Value="72"></Setter>
        <Setter Property="Control.Foreground"
                Value="{StaticResource ApplicationSelectedBackgroundBrush}" />
        <Setter Property="Control.Background"
                Value="{StaticResource IconBrush6}" />
        <Setter Property="Control.FontSize"
                Value="{StaticResource NormalFontSize}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border BorderBrush="{TemplateBinding Background}"
                            BorderThickness="2"
                            CornerRadius="0">
                        <Grid Name="BtnName"
                              Background="{TemplateBinding Control.Background}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Grid>

                    </Border >
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">

                            <Setter Property="Control.Background"
                                    Value="{StaticResource IconBrush6}" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed"
                                 Value="True">
                            <Setter Property="UIElement.Opacity"
                                    Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="SimpleButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Height"
                Value="64"></Setter>
        <Setter Property="Control.Foreground"
                Value="{StaticResource ApplicationForegroundBrush}" />
        <Setter Property="Control.Background"
                Value="Transparent" />
        <Setter Property="Control.FontSize"
                Value="{StaticResource NormalFontSize}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderBrush="{TemplateBinding Background}"
                            BorderThickness="0">
                        <Grid Name="BtnName"
                              Background="{TemplateBinding Control.Background}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Grid>

                    </Border >
                    <ControlTemplate.Triggers>

                        <Trigger Property="ButtonBase.IsPressed"
                                 Value="True">
                            <Setter Property="UIElement.Opacity"
                                    Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="CommonToggleButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Height"
                Value="64"></Setter>
        <Setter Property="Control.Foreground"
                Value="{StaticResource ApplicationForegroundBrush}" />
        <Setter Property="Control.Background"
                Value="{StaticResource ApplicationContrastBackgroundBrush}" />
        <Setter Property="Control.FontSize"
                Value="{StaticResource NormalFontSize}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type  ToggleButton}">

                    <Border BorderBrush="{TemplateBinding Background}"
                            BorderThickness="2"
                            CornerRadius="5">
                        <Grid Name="BtnName"
                              Background="{TemplateBinding Control.Background}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Grid>

                    </Border >
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsChecked"
                                 Value="False">
                            <Setter Property="Background"
                                    Value="{StaticResource ApplicationContrastBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource ApplicationSelectedBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">

                            <Setter Property="Control.Background"
                                    Value="{StaticResource ApplicationSelectedBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed"
                                 Value="True">
                            <Setter Property="UIElement.Opacity"
                                    Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabToggleButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Height"
                Value="88"></Setter>
        <Setter Property="Control.Foreground"
                Value="{StaticResource ApplicationForegroundBrush}" />
        <Setter Property="Control.Background"
                Value="{StaticResource ApplicationContrastBackgroundBrush}" />
        <Setter Property="Control.FontSize"
                Value="{StaticResource NormalFontSize}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type  ToggleButton}">

                    <Border BorderBrush="{TemplateBinding Background}"
                            BorderThickness="2"
                            CornerRadius="0">
                        <Grid Name="BtnName"
                              Background="{TemplateBinding Control.Background}">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter  HorizontalAlignment="Center"
                                               VerticalAlignment="Center" />
                            <Rectangle Margin="28"
                                       Name="IconRectangle"
                                       Height="32"
                                       Width="32"
                                       Grid.Column="1"
                                       Fill="{StaticResource IconBrush4}"></Rectangle>
                        </Grid>

                    </Border >
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsChecked"
                                 Value="False">
                            <Setter Property="Background"
                                    Value="{StaticResource ApplicationContrastBackgroundBrush}" />
                            <Setter TargetName="IconRectangle"
                                    Property="Fill"
                                    Value="{StaticResource IconBrush4}"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource ApplicationSelectedBackgroundBrush}" />
                            <Setter TargetName="IconRectangle"
                                    Property="Fill"
                                    Value="{StaticResource IconBrush5}"></Setter>

                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">

                            <Setter Property="Control.Background"
                                    Value="{StaticResource ApplicationSelectedBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed"
                                 Value="True">
                            <Setter Property="UIElement.Opacity"
                                    Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="TransCodeComboBoxStyle"
           TargetType="{x:Type ComboBox}">
        <Setter Property="ItemsControl.ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="FrameworkElement.MinHeight"
                            Value="22" />
                    <Setter Property="FrameworkElement.MinWidth"
                            Value="60" />
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                <Border Name="Back"
                                        Background="#00FFFFFF"
                                        BorderThickness="0,0,0,0"
                                        BorderBrush="#FF007ACC">
                                    <ContentPresenter VerticalAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      Margin="5,0,0,0"
                                                      ContentSource="{Binding Source}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="UIElement.IsMouseOver"
                                             Value="True">
                                        <Setter TargetName="Back"
                                                Property="Border.Background"
                                                Value="#FFD3D3D3" />
                                    </Trigger>
                                    <Trigger Property="ComboBoxItem.IsHighlighted"
                                             Value="True">
                                        <Setter TargetName="Back"
                                                Property="Border.Background"
                                                Value="#FFD3D3D3" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid Background="#FFF7FDF7">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.7*" />
                            <ColumnDefinition Width="0.3*"
                                              MaxWidth="30" />
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0"
                                 IsReadOnly="{TemplateBinding ComboBox.IsReadOnly}"
                                 Text="{TemplateBinding ComboBox.Text}" />
                        <Border Grid.Column="0"
                                BorderThickness="1,1,0,1"
                                BorderBrush="#FF007ACC"
                                CornerRadius="1,0,0,1" />
                        <Border Grid.Column="1"
                                BorderThickness="0,1,1,1"
                                BorderBrush="#FF007ACC"
                                CornerRadius="0,1,1,0">
                            <ToggleButton ClickMode="Press"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <Popup Name="Popup"
                               IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                               Placement="Bottom"
                               Focusable="False"
                               AllowsTransparency="True"
                               PopupAnimation="Slide">
                            <Border Name="DropDown"
                                    CornerRadius="1"
                                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                    SnapsToDevicePixels="True">
                                <Border.Effect>
                                    <DropShadowEffect Color="Black"
                                                      BlurRadius="2"
                                                      ShadowDepth="0"
                                                      Opacity="0.5" />
                                </Border.Effect>
                                <ScrollViewer Margin="4,6,4,6"
                                              Style="{DynamicResource ScrollViewerStyle}"
                                              MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                              SnapsToDevicePixels="True"
                                              ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                              ScrollViewer.VerticalScrollBarVisibility="Auto"
                                              ScrollViewer.CanContentScroll="True">
                                    <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                Background="#FFFFFFFF" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LargeTileStyle"
           TargetType="controls:Tile">

        <Setter Property="Height"
                Value="305" />

        <Setter Property="TitleFontSize"
                Value="{StaticResource NormalFontSize}" />

        <Setter Property="TextOptions.TextFormattingMode"
                Value="Display" />

        <Setter Property="TextOptions.TextRenderingMode"
                Value="ClearType" />

        <Setter Property="Width"
                Value="305" />

    </Style>

    <Style x:Key="MidTileStyle"
           TargetType="controls:Tile">

        <Setter Property="Height"
                Value="147" />

        <Setter Property="TitleFontSize"
                Value="{StaticResource NormalFontSize}" />

        <Setter Property="TextOptions.TextFormattingMode"
                Value="Display" />

        <Setter Property="TextOptions.TextRenderingMode"
                Value="ClearType" />

        <Setter Property="Width"
                Value="305" />

    </Style>


    <Style x:Key="SmallTileStyle"
           TargetType="controls:Tile">

        <Setter Property="Height"
                Value="147" />

        <Setter Property="TitleFontSize"
                Value="{StaticResource NormalFontSize}" />

        <Setter Property="TextOptions.TextFormattingMode"
                Value="Ideal" />

        <Setter Property="TextOptions.TextRenderingMode"
                Value="ClearType" />

        <Setter Property="Width"
                Value="147" />

    </Style>
    <Style TargetType="Label">
        <Setter Property="FontSize"
                Value="22"></Setter>
        <Setter Property="Foreground"
                Value="{StaticResource ApplicationForegroundBrush}"></Setter>
    </Style>
    <Style x:Key="MetroCircleFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Ellipse Margin="3"
                             Stroke="{DynamicResource BlackBrush}"
                             StrokeThickness="1"
                             SnapsToDevicePixels="True"
                             StrokeDashArray="2 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MetroCircleButtonStyle"
           TargetType="{x:Type ButtonBase}">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource MetroCircleFocusVisual}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Ellipse Fill="{TemplateBinding Background}"
                                 StrokeThickness="0" />
                        <Ellipse x:Name="ellipsebg"
                                 Fill="{DynamicResource BlackBrush}"
                                 StrokeThickness="0"
                                 Opacity="0" />
                        <Ellipse x:Name="ellipse"
                                 Stroke="{TemplateBinding BorderBrush}"
                                 StrokeThickness="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}, Path=BorderThickness.Left}" />
                        <ContentPresenter x:Name="PART_ContentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0"
                                                         From="0"
                                                         Storyboard.TargetName="ellipsebg"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <!--  some out fading  -->
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.5"
                                                         Storyboard.TargetName="ellipsebg"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ellipse"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="False">
                            <Setter TargetName="ellipse"
                                    Property="Opacity"
                                    Value="0.7" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource GrayBrush7}" />
                            <Setter TargetName="ellipse"
                                    Property="Opacity"
                                    Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CommonListViewItemStyle"
           TargetType="ListViewItem">
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch"></Setter>
        <Setter Property="VerticalContentAlignment"
                Value="Stretch"></Setter>
        <Setter Property="Padding"
                Value="0"></Setter>
    </Style>

</ResourceDictionary>